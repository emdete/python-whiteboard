#!/usr/bin/env python3
from time import sleep
from re import match
from os import listdir
from bluetooth import discover_devices
from linuxWiimoteLib import Wiimote

def wiimote_callback(px, py):
	print(px, py)

def main():
	print('press 1+2 / backbutton to make discoverable')
	wiimote = Wiimote()
	while not wiimote.running:
		try:
			devices = discover_devices(duration=10, lookup_names=True)
			print('found {} bt devices'.format(len(devices)))
			for device in devices:
				if match('.*nintendo.*', device[1].lower()):
					print('found {}, will connect.'.format(device[0]))
					wiimote.Connect(device)
					wiimote.SetRumble(True)
					sleep(.2)
					wiimote.SetRumble(False)
					wiimote.setIRCallBack(wiimote_callback)
					wiimote.activate_IR(6)
					wiimote.SetLEDs(False, True, False, False)
					break
		except OSError as e:
			print('bluetooth off?', e)
			for rfkill in listdir('/sys/class/rfkill'):
				with open('/sys/class/rfkill/' + rfkill + '/type') as f:
					_type = f.read().strip()
				if _type == 'bluetooth':
					with open('/sys/class/rfkill/' + rfkill + '/state') as f:
						state = int(f.read().strip())
					if not state:
						print('bluetooth is off!')
	try:
		while True:
			print(
				'A' if wiimote.WiimoteState.ButtonState.A else '',
				'B' if wiimote.WiimoteState.ButtonState.B else '',
				'Up' if wiimote.WiimoteState.ButtonState.Up else '',
				'Down' if wiimote.WiimoteState.ButtonState.Down else '',
				'Left' if wiimote.WiimoteState.ButtonState.Left else '',
				'Right' if wiimote.WiimoteState.ButtonState.Right else '',
				'Minus' if wiimote.WiimoteState.ButtonState.Minus else '',
				'Plus' if wiimote.WiimoteState.ButtonState.Plus else '',
				'Home' if wiimote.WiimoteState.ButtonState.Home else '',
				'One' if wiimote.WiimoteState.ButtonState.One else '',
				'Two' if wiimote.WiimoteState.ButtonState.Two else '',
				('Found1',
				wiimote.WiimoteState.IRState.RawX1,
				wiimote.WiimoteState.IRState.RawY1,
				wiimote.WiimoteState.IRState.Size1, )
				if wiimote.WiimoteState.IRState.Found1 else '',
				('Found2',
				wiimote.WiimoteState.IRState.RawX2,
				wiimote.WiimoteState.IRState.RawY2,
				wiimote.WiimoteState.IRState.Size2, )
				if wiimote.WiimoteState.IRState.Found2 else '',
				)
			sleep(1)
	finally:
		wiimote.Disconnect()

if __name__ == '__main__':
	from sys import argv
	main(*argv[1:])

